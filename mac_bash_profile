#!/usr/local/bin/bash

# Shell Prompt Color Customization.
export PS1="\\[\\033[36m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\]\\h:\\[\\033[1;33m\\]\\w\\[\\033[m\\] \$ "
export CLICOLOR=1

# Add current branch to prompt.
# export GIT_PS1_SHOWDIRTYSTATE=1
# export PS1="$PS1$(echo '$(__git_ps1 "(%s)")\$ ')"

# Bash Completions from bash-completion Homebrew package.
if [ -f "$(brew --prefix)/etc/bash_completion" ]; then
  source "$(brew --prefix)/etc/bash_completion"
fi

# Setting up Language for installed applications
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Set vim as default editor for Git.
export VISUAL=vim
export EDITOR="$VISUAL"

# Ignore duplicates in command history and increase
# history size to 1000 lines
export HISTCONTROL=ignoredups
export HISTSIZE=1000

# Alias file
[ -f ~/.bash_aliases ] && source ~/.bash_aliases

# Add fzf key bindings
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'

# Don't store less history file.
export LESSHISTFILE="/dev/null"

# Java External Libraries
export CLASSPATH="/Users/juandaco/Programming/java/lib/*"

# For Homebrew
HOMEBREW_BIN_PATHS="/usr/local/bin:/usr/local/sbin"
# Folder for my executable Scripts
HOME_BIN_PATH="$HOME/bin"
# Added Homebrew Ruby path
RUBY_BIN_PATH="/usr/local/opt/ruby/bin"
# Add go installed binaries
GO_BIN_PATH="$HOME/go/bin"
# For Android Development.
GRADLE_BIN_PATH='/usr/local/opt/gradle/bin'
# SQLite
SQLITE_BIN_PATH='/usr/local/opt/sqlite/bin'
# cargo Rust package manager
CARGO_BIN_PATH="$HOME/.cargo/bin"

PATH="
$HOMEBREW_BIN_PATHS:\
$HOME_BIN_PATH:\
$RUBY_BIN_PATH:\
$GO_BIN_PATH:\
$GRADLE_BIN_PATH:\
$SQLITE_BIN_PATH:\
$CARGO_BIN_PATH:\
$PATH\
"

# Add nvm path
export NVM_DIR=~/.nvm
function nvm() {
  if [ -s "$NVM_DIR/nvm.sh" ]; then
    . "$NVM_DIR/nvm.sh"
    nvm use system
    nvm "$@"
  fi
}

# Get Network SSID
function ssid() {
  if [ $# -eq 0 ]; then
    networksetup -getairportnetwork "${1:-en0}" | cut -c 24-
  elif [ $# -eq 1 ]; then
    networksetup -getairportnetwork "$1"
  else
    echo "Pass network interface(en0, lo0) as an argument."
  fi
}

